@page "/create"
@layout DefaultLayout
@using DataLibrary
@using CommerceBlazorServer.Models
@using Microsoft.Extensions.Configuration
@inject IDataAccess _data
@inject IConfiguration _config
@inject NavigationManager NavManager
@inject NavigationManager UriHelper

<style>
    #AccountNumber, #email, #username, #password, #Confirm, #DofB, #sQ, #sA {
        text-indent: 10px;
        font-family: "Poppins", sans-serif;
        font-size: 15px;
        border: 3px solid #a9a9a9;
        padding: .25%;
        border-radius: 2vh;
        width: 35%;
    }
</style>
<body>
    <header><PageTitle>Create an Account</PageTitle></header>

<div>

<EditForm Model="@newAccount" OnValidSubmit="@InsertData">
	<DataAnnotationsValidator/>
	<ValidationSummary/>
	<p>

	<p>
	<InputText id="AccountNumber" placeholder="Account Number" @bind-Value="newAccount.account_id"/>	
	</p>
	<p>
	<InputText id="email" placeholder="Email" @bind-Value="newAccount.email"/>
	</p>
	<p>
	<InputText id="username" placeholder="Username" @bind-Value="newAccount.username"/>
	</p>
	<p>
	<InputText id="password" placeholder="Password" @bind-Value="newAccount.password"/>
	</p>
	<p>
	<InputText id="Confirm" placeholder="Confirm Password" @bind-Value="newAccount.passwordConfirm"/>
	</p>
	<p>
	<InputDate id="DofB" placeholder="Date of Birth" @bind-Value="newAccount.date"/>
	</p>
	<p>
	<InputSelect id="sQ" placeholder="Security Question" @bind-Value="newAccount.security_question">		
	<option value="" selected>Select a Question...</option>
			<option value="What is your mother's maiden name?">What is your mother's maiden name?</option>
			<option value="What was your first pet's name?">What was your first pet's name?</option>
			<option value="What was your favorite childhood cartoon?">What was your favorite childhood cartoon?</option>
			<option value="Who is your favorite author?">Who is your favorite author?</option>
			<option value="What was your first car?">What was your first car?</option>
	</InputSelect>
	</p>	
	<p>
	<InputText id="sA" placeholder="Security Answer" @bind-Value="newAccount.security_answer"/>
	</p>
	<button type="submit" class="btn btn-primary">Submit</button>
	</p>
</EditForm>


@code{

			List<PersonModel> account;
			public PersonModel newAccount = new PersonModel();
			List<PersonModel> account2;
			private async Task InsertData()
			{

				string sql = "insert into database.account(account_id, email, username, password, date_of_birth, security_question, security_answer) values(@account_id, @email, @username, @password, @date, @security_question, @security_answer) ;";
				await _data.SaveData(sql, new {@newAccount.account_id, @newAccount.email, @newAccount.username, @newAccount.password, @newAccount.date, @newAccount.security_question, @newAccount.security_answer}, _config.GetConnectionString("default"));
				Navigate();
			}

		protected override async Task OnInitializedAsync()
		{
			string sql = "select account_id,username,email from database.account where account_id is not null and username is not null and email is not null;";

			account = await _data.LoadData<PersonModel, dynamic>(sql, new {}, _config.GetConnectionString("default"));
			
		}
		void Navigate()
		{
			UriHelper.NavigateTo("/");
		}

  
}
</div>
</body>
